#!/usr/bin/env bash
# File mapping lists for template → repo sync (aligned to your latest directory map)
# shellcheck disable=SC2154
# terraform file
export TF_VAR_FILE="${TF_VAR_FILE:-secrets.tfvars}"


# Root/common files
export gitignore_content="$TEMPLATES_DIR/.gitignore"
export gitattributes_content="$TEMPLATES_DIR/.gitattributes"
export readme_content="$TEMPLATES_DIR/README.md"

export gitignore_file=".gitignore"
export gitattributes_file=".gitattributes"
export readme_file="README.md"

# -------------------------------------------------------------------------------------
# Argo CD — AppSets (HOW)
# -------------------------------------------------------------------------------------
export APPSETS_TEMPLATES=(
  "$APPSETS_DIR/${HUB_CLUSTER_NAME}/apps-addons.yaml"
  "$APPSETS_DIR/${HUB_CLUSTER_NAME}/apps-kro-hub.yaml"
  "$APPSETS_DIR/${HUB_CLUSTER_NAME}/apps-kro-spokes.yaml"
)
export APPSETS_FILES=(
  "$appsets_dest/${HUB_CLUSTER_NAME}/apps-addons.yaml"
  "$appsets_dest/${HUB_CLUSTER_NAME}/apps-kro-hub.yaml"
  "$appsets_dest/${HUB_CLUSTER_NAME}/apps-kro-spokes.yaml"
)

# -------------------------------------------------------------------------------------
# Argo CD — Addons example charts (WHAT)
# (Add more addons here in lockstep pairs)
# -------------------------------------------------------------------------------------
export ADDONS_TEMPLATES=(
  "$ADDONS_DIR/loki/Chart.yaml"
  "$ADDONS_DIR/loki/values.yaml"
  "$ADDONS_DIR/prometheus/Chart.yaml"
  "$ADDONS_DIR/prometheus/values.yaml"
  "$ADDONS_DIR/tempo/Chart.yaml"
  "$ADDONS_DIR/tempo/values.yaml"
)
export ADDONS_FILES=(
  "$addons_dest/loki/Chart.yaml"
  "$addons_dest/loki/values.yaml"
  "$addons_dest/prometheus/Chart.yaml"
  "$addons_dest/prometheus/values.yaml"
  "$addons_dest/tempo/Chart.yaml"
  "$addons_dest/tempo/values.yaml"
)

# -------------------------------------------------------------------------------------
# KRO — Hub (controllers + ACK graphs)
# -------------------------------------------------------------------------------------
export HUB_KRO_TEMPLATES=(
  "$APPS_HUB_DIR/controllers/Chart.yaml"
  "$APPS_HUB_DIR/controllers/values.yaml"
  "$APPS_HUB_DIR/rgds/ack-graph.yaml"   # TODO: replace with your actual graph file
)
export HUB_KRO_FILES=(
  "$hub_ack_controller_dest/Chart.yaml"
  "$hub_ack_controller_dest/values.yaml"
  "$hub_ack_custom_resource_dest/ack-graph.yaml"
)

# -------------------------------------------------------------------------------------
# KRO — Spoke (controllers + workload graphs)
# -------------------------------------------------------------------------------------
export SPOKE_KRO_TEMPLATES=(
  "$APPS_SPOKE_DIR/controllers/Chart.yaml"
  "$APPS_SPOKE_DIR/controllers/values.yaml"
  "$APPS_SPOKE_DIR/rgds/workload-graph.yaml" # TODO: replace with your actual workload file
)
export SPOKE_KRO_FILES=(
  "$spoke_kro_workloads_rgroup_dest/Chart.yaml"
  "$spoke_kro_workloads_rgroup_dest/values.yaml"
  "$spoke_kro_workloads_rg_dest/workload-graph.yaml"
)

# -------------------------------------------------------------------------------------
# Clusters (WHERE)
# -------------------------------------------------------------------------------------
export CLUSTERS_TEMPLATES=(
  "$CLUSTERS_DIR/hubs/${HUB_CLUSTER_NAME}/hub-root.yaml"
)
export CLUSTERS_FILES=(
  "$clusters_dest/hubs/${HUB_CLUSTER_NAME}/hub-root.yaml"
)

# -------------------------------------------------------------------------------------
# Projects (RBAC)
# -------------------------------------------------------------------------------------
export PROJECTS_TEMPLATES=(
  "$PROJECTS_DIR/project-hub.yaml"
  "$PROJECTS_DIR/project-spokes.yaml"
)
export PROJECTS_FILES=(
  "$projects_dest/project-hub.yaml"
  "$projects_dest/project-spokes.yaml"
)

# -------------------------------------------------------------------------------------
# Values (flat overrides)
# -------------------------------------------------------------------------------------
export VALUES_TEMPLATES=(
  "$VALUES_DIR/common.yaml"
  "$ENVIRONMENT_VALUES_DIR/${ENVIRONMENT}.yaml"
  "$ACCOUNT_VALUES_DIR/${HUB_PROFILE}.yaml"
  "$MATRIX_VALUES_DIR/${HUB_PROFILE}--${HUB_CLUSTER_NAME}--${ENVIRONMENT}.yaml"
)
export VALUES_FILES=(
  "$values_dest/common.yaml"
  "$environment_values_dest/${ENVIRONMENT}.yaml"
  "$account_values_dest/${HUB_PROFILE}.yaml"
  "$matrix_values_dest/${HUB_PROFILE}--${HUB_CLUSTER_NAME}--${ENVIRONMENT}.yaml"
)

# -------------------------------------------------------------------------------------
# Terraform — Hub instance (one dir per hub in templates)
# -------------------------------------------------------------------------------------
export HUB_TF_TEMPLATES=(
  "$HUB_TF_DEV_DIR/backend.tf"
  # "$HUB_TF_DEV_DIR/locals.tf"
  "$HUB_TF_DEV_DIR/main.tf"
  # "$HUB_TF_DEV_DIR/outputs.tf"
  "$HUB_TF_DEV_DIR/terraform.tfvars"
  "$HUB_TF_DEV_DIR/variables.tf"
  "$HUB_TF_DEV_DIR/versions.tf"

  "$HUB_TF_STAGING_DIR/backend.tf"
  # "$HUB_TF_STAGING_DIR/locals.tf"
  "$HUB_TF_STAGING_DIR/main.tf"
  # "$HUB_TF_STAGING_DIR/outputs.tf"
  "$HUB_TF_STAGING_DIR/terraform.tfvars"
  "$HUB_TF_STAGING_DIR/variables.tf"
  "$HUB_TF_STAGING_DIR/versions.tf"

  "$HUB_TF_PROD_DIR/backend.tf"
  "$HUB_TF_PROD_DIR/locals.tf"
  "$HUB_TF_PROD_DIR/main.tf"
  # "$HUB_TF_PROD_DIR/outputs.tf"
  "$HUB_TF_PROD_DIR/terraform.tfvars"
  "$HUB_TF_PROD_DIR/variables.tf"
  "$HUB_TF_PROD_DIR/versions.tf"
)
export HUB_TF_FILES=(
  "$hub_tf_dev_dest/backend.tf"
  # "$hub_tf_dev_dest/locals.tf"
  "$hub_tf_dev_dest/main.tf"
  # "$hub_tf_dev_dest/outputs.tf"
  "$hub_tf_dev_dest/$HUB_PROFILE.tfvars"
  "$hub_tf_dev_dest/variables.tf"
  "$hub_tf_dev_dest/versions.tf"

  "$hub_tf_staging_dest/backend.tf"
  # "$hub_tf_staging_dest/locals.tf"
  "$hub_tf_staging_dest/main.tf"
  # "$hub_tf_staging_dest/outputs.tf"
  "$hub_tf_staging_dest/terraform.tfvars"
  "$hub_tf_staging_dest/variables.tf"
  "$hub_tf_staging_dest/versions.tf"

  "$hub_tf_prod_dest/backend.tf"
  "$hub_tf_prod_dest/locals.tf"
  "$hub_tf_prod_dest/main.tf"
  # "$hub_tf_prod_dest/outputs.tf"
  "$hub_tf_prod_dest/terraform.tfvars"
  "$hub_tf_prod_dest/variables.tf"
  "$hub_tf_prod_dest/versions.tf"
)
# -------------------------------------------------------------------------------------
# Terraform — Modules (reusable building blocks)
# -------------------------------------------------------------------------------------
export TF_MODULES_TEMPLATES=(
  # argocd
  "$TF_MODULES_ARGOCD_DIR/applicationsets.yaml"
  "$TF_MODULES_ARGOCD_DIR/argocd-initial-values.yaml"
  "$TF_MODULES_ARGOCD_DIR/main.tf"
  # "$TF_MODULES_ARGOCD_DIR/providers.tf"
  "$TF_MODULES_ARGOCD_DIR/variables.tf"

  # eks-hub
  "$TF_MODULES_EKS_HUB_DIR/argocd.tf"
  "$TF_MODULES_EKS_HUB_DIR/data.tf"
  "$TF_MODULES_EKS_HUB_DIR/main.tf"
  "$TF_MODULES_EKS_HUB_DIR/outputs.tf"
  "$TF_MODULES_EKS_HUB_DIR/pod-identity.tf"
  # "$TF_MODULES_EKS_HUB_DIR/providers.tf"
  "$TF_MODULES_EKS_HUB_DIR/variables.tf"

  # eks-spoke
  "$TF_MODULES_EKS_SPOKE_DIR/main.tf"
  "$TF_MODULES_EKS_SPOKE_DIR/outputs.tf"
  "$TF_MODULES_EKS_SPOKE_DIR/variables.tf"

  # git-secrets
  "$TF_MODULES_GIT_SECRETS_DIR/main.tf"
  # "$TF_MODULES_GIT_SECRETS_DIR/providers.tf"
  "$TF_MODULES_GIT_SECRETS_DIR/variables.tf"

  # gitops-bridge (root)
  "$TF_MODULES_GITOPS_BRIDGE_DIR/main.tf"
  "$TF_MODULES_GITOPS_BRIDGE_DIR/outputs.tf"
  "$TF_MODULES_GITOPS_BRIDGE_DIR/variables.tf"
  # gitops-bridge charts
  "$TF_MODULES_CHARTS_DIR/Chart.yaml"
  "$TF_MODULES_CHARTS_DIR/values.yaml"
  # gitops-bridge chart templates
  "$TF_MODULES_TEMPLATES_DIR/resources.yaml"

  # kind-hub (if present)
  "$TF_MODULES_KIND_HUB_DIR/main.tf"
  "$TF_MODULES_KIND_HUB_DIR/variables.tf"

  # root module (if present)
  "$TF_MODULES_ROOT_DIR/locals.tf"
  "$TF_MODULES_ROOT_DIR/main.tf"
  "$TF_MODULES_ROOT_DIR/providers.tf"
  "$TF_MODULES_ROOT_DIR/variables.tf"
  "$TF_MODULES_ROOT_DIR/versions.tf"
)
export  TF_MODULES_FILES=(
  # argocd
  "$tf_modules_argocd_dest/applicationsets.yaml"
  "$tf_modules_argocd_dest/argocd-initial-values.yaml"
  "$tf_modules_argocd_dest/main.tf"
  # "$tf_modules_argocd_dest/providers.tf"
  "$tf_modules_argocd_dest/variables.tf"

  # eks-hub
  "$tf_modules_eks_hub_dest/argocd.tf"
  "$tf_modules_eks_hub_dest/data.tf"
  "$tf_modules_eks_hub_dest/main.tf"
  "$tf_modules_eks_hub_dest/outputs.tf"
  "$tf_modules_eks_hub_dest/pod-identity.tf"
  # "$tf_modules_eks_hub_dest/providers.tf"
  "$tf_modules_eks_hub_dest/variables.tf"

  # eks-spoke
  "$tf_modules_eks_spoke_dest/main.tf"
  "$tf_modules_eks_spoke_dest/outputs.tf"
  "$tf_modules_eks_spoke_dest/variables.tf"

  # git-secrets
  "$tf_modules_git_secrets_dest/main.tf"
  # "$tf_modules_git_secrets_dest/providers.tf"
  "$tf_modules_git_secrets_dest/variables.tf"

  # gitops-bridge (root)
  "$tf_modules_gitops_dest/main.tf"
  "$tf_modules_gitops_dest/outputs.tf"
  "$tf_modules_gitops_dest/variables.tf"
  # gitops-bridge charts
  "$tf_modules_charts_dest/Chart.yaml"
  "$tf_modules_charts_dest/values.yaml"
  # gitops-bridge chart templates
  "$tf_modules_chart_templates_dest/resources.yaml"

  # kind-hub
  "$tf_modules_kind_hub_dest/main.tf"
  "$tf_modules_kind_hub_dest/variables.tf"

  # root module
  "$tf_modules_root_dest/locals.tf"
  "$tf_modules_root_dest/main.tf"
  "$tf_modules_root_dest/providers.tf"
  "$tf_modules_root_dest/variables.tf"
  "$tf_modules_root_dest/versions.tf"
)