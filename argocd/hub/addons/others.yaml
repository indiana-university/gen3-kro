syncPolicy:
  automated:
    selfHeal: false
    allowEmpty: true
    prune: false
  retry:
    limit: -1 # number of failed sync attempt retries; unlimited number of attempts if less than 0
    backoff:
      duration: 5s # the amount to back off. Default unit is seconds, but could also be a duration (e.g. "2m", "1h")
      factor: 2 # a factor to multiply the base duration after each failed retry
      maxDuration: 10m # the maximum amount of time allowed for the backoff strategy
  syncOptions:
    - CreateNamespace=true
    - ServerSideApply=true  # Big CRDs.
syncPolicyAppSet:
  preserveResourcesOnDeletion: false # to be able to cleanup
useSelectors: true
repoURLGit: '{{.metadata.annotations.addons_repo_url}}'
repoURLGitRevision: '{{.metadata.annotations.addons_repo_revision}}'
repoURLGitBasePath: '{{.metadata.annotations.addons_repo_basepath}}'
valueFiles:
  - default/addons
  - environments/{{.metadata.labels.environment}}/addons
  - clusters/{{.nameNormalized}}/addons
useValuesFilePrefix: true
valuesFilePrefix: 'tenants/{{.metadata.labels.tenant}}/'

########################################
# KRO - Kubernetes Resource Orchestrator
########################################

kro:
  enabled: true
  namespace: kro-system
  annotationsAppSet:
    argocd.argoproj.io/sync-wave: "-3" # Needs to be before resources that need KRO
  defaultVersion: "0.2.1"
  chartName: kro
  chartNamespace: kro-run/kro
  chartRepository: ghcr.io
  selector:
    matchExpressions:
      - key: enable_kro
        operator: In
        values: ['true']

kro-eks-rgs:
  enabled: true
  type: manifest
  namespace: kro
  annotationsAppSet:
    argocd.argoproj.io/sync-wave: "-2" # Needs to be after KRO operator but before instances
  path: 'shared/kro-rgds/aws'
  chartRepository: '{{.metadata.annotations.addons_repo_url}}'
  targetRevision: '{{.metadata.annotations.addons_repo_revision}}'
  selector:
    matchExpressions:
      - key: enable_kro_eks_rgs
        operator: In
        values: ['true']

########################################
# Other Kubernetes Addons
########################################

metrics-server:
  enabled: true
  namespace: kube-system
  annotationsAppSet:
    argocd.argoproj.io/sync-wave: "-1" # Basic infrastructure
  chartName: metrics-server
  defaultVersion: "3.12.1"
  chartRepository: "https://kubernetes-sigs.github.io/metrics-server"
  selector:
    matchExpressions:
      - key: enable_metrics_server
        operator: In
        values: ['true']

external-secrets:
  enabled: true
  enableACK: false
  annotationsAppSet:
    argocd.argoproj.io/sync-wave: "3" # Needs to be after KRO RGD
  namespace: external-secrets
  chartName: external-secrets
  defaultVersion: "0.10.3"
  chartRepository: "https://charts.external-secrets.io"
  selector:
    matchExpressions:
      - key: enable_external_secrets
        operator: In
        values: ['true']
  valuesObject:
    serviceAccount:
      name: "external-secrets-sa"

kyverno:
  enabled: true
  releaseName: kyverno
  annotationsAppSet:
    argocd.argoproj.io/sync-wave: "3" # Needs to be after KRO RGD
  namespace: 'kyverno'
  chartName: kyverno
  chartRepository: https://kyverno.github.io/kyverno
  defaultVersion: "3.3.4"
  selector:
    matchExpressions:
      - key: enable_kyverno
        operator: In
        values: ['true']

kyverno_policy_reporter:
  enabled: true
  releaseName: kyverno-policy-reporter
  annotationsAppSet:
    argocd.argoproj.io/sync-wave: "4" # Needs to be after Kyverno
  namespace: 'kyverno'
  chartName: policy-reporter
  chartRepository: https://kyverno.github.io/policy-reporter
  defaultVersion: '3.0.0'
  selector:
    matchExpressions:
      - key: enable_kyverno_policy_reporter
        operator: In
        values: ['true']
  valuesObject:
    serviceAccount:
      name: policy-reporter
    logging:
      logLevel: 0
    plugin:
      kyverno:
        enabled: true
    ui:
      banner: '{{.metadata.annotations.hub_cluster_name}}'
      enabled: true
    target:
      securityHub:
        accountId: '{{.metadata.annotations.hub_account_id}}'
        region: '{{.metadata.annotations.hub_aws_region}}'
        productName: '{{.metadata.annotations.hub_cluster_name}}'
        skipExistingOnStartup: false
        delayInSeconds: 10
        customFields:
          cluster: '{{.metadata.annotations.hub_cluster_name}}'
          region: '{{.metadata.annotations.hub_aws_region}}'
          account: '{{.metadata.annotations.hub_account_id}}'
          eks_console_url: 'https://{{.metadata.annotations.hub_aws_region}}.console.aws.amazon.com/eks/home?region={{.metadata.annotations.hub_aws_region}}#/clusters/{{.metadata.annotations.hub_cluster_name}}?selectedTab=cluster-resources-tab&selectedResourceId=namespaces'
        minimumPriority: 'warning'
        synchronize: true

kyverno_policies:
  enabled: true
  releaseName: kyverno-policies
  annotationsAppSet:
    argocd.argoproj.io/sync-wave: "4" # Needs to be after Kyverno
  namespace: 'kyverno'
  chartName: kyverno-policies
  chartRepository: https://kyverno.github.io/kyverno
  defaultVersion: "3.2.5"
  selector:
    matchExpressions:
      - key: enable_kyverno_policies
        operator: In
        values: ['true']
  valuesObject:
    podSecurityStandard: restricted
    validationFailureAction: Audit
    skipBackgroundRequests: false

kube_state_metrics:
  enabled: true
  releaseName: kube-state-metrics
  namespace: 'kube-prometheus-stack'
  chartName: kube-state-metrics
  annotationsAppSet:
    argocd.argoproj.io/sync-wave: "3" # Needs to be after KRO RGD
  chartRepository: https://prometheus-community.github.io/helm-charts
  defaultVersion: "5.25.1"
  selector:
    matchExpressions:
      - key: enable_kube_state_metrics
        operator: In
        values: ['true']

# Optional addons (disabled by default)

argocd:
  enabled: false
  chartName: argo-cd
  namespace: argocd
  releaseName: argocd
  defaultVersion: "7.7.8"
  chartRepository: "https://argoproj.github.io/argo-helm"
  selector:
    matchExpressions:
      - key: enable_argocd
        operator: In
        values: ['true']

aws_efs_csi_driver:
  enabled: false
  enableACK: false
  releaseName: aws-efs-csi-driver
  annotationsAppSet:
    argocd.argoproj.io/sync-wave: "4" # Needs to be after ack-efs
  namespace: "kube-system"
  chartName: aws-efs-csi-driver
  chartRepository: https://kubernetes-sigs.github.io/aws-efs-csi-driver
  defaultVersion: "3.0.7"
  selector:
    matchExpressions:
      - key: enable_aws_efs_csi_driver
        operator: In
        values: ['true']
  valuesObject:
    controller:
      serviceAccount:
        name: '{{default "efs-csi-controller-sa" (index  .metadata.annotations "aws_efs_csi_driver_controller_service_account")}}'
        annotations:
          eks.amazonaws.com/role-arn: '{{default "" (index .metadata.annotations "aws_efs_csi_driver_iam_role_arn")}}'
    node:
      serviceAccount:
        name: '{{default "efs-csi-node-sa" (index .metadata.annotations "aws_efs_csi_driver_node_service_account")}}'
        annotations:
          eks.amazonaws.com/role-arn: '{{default "" (index .metadata.annotations "aws_efs_csi_driver_iam_role_arn")}}'

cert_manager:
  enabled: false
  releaseName: cert-manager
  namespace: 'cert-manager'
  chartName: cert-manager
  chartRepository: https://charts.jetstack.io
  defaultVersion: "v1.15.2"
  annotationsAppSet:
    argocd.argoproj.io/sync-wave: '-2'
  selector:
    matchExpressions:
      - key: enable_cert_manager
        operator: In
        values: ['true']
  valuesObject:
    installCRDs: true
    serviceAccount:
      name: '{{ default "cert-manager" (index .metadata.annotations "cert_manager_service_account") }}'

external_dns:
  enabled: false
  releaseName: external-dns
  namespace: 'kube-system'
  annotationsAppSet:
    argocd.argoproj.io/sync-wave: "3" # Needs to be after KRO RGD
  chartName: external-dns
  chartRepository: https://kubernetes-sigs.github.io/external-dns
  defaultVersion: "1.14.5"
  selector:
    matchExpressions:
      - key: enable_external_dns
        operator: In
        values: ['true']
  valuesObject:
    provider: aws
    serviceAccount:
      name: '{{default "external-dns" (index .metadata.annotations "external_dns_service_account")}}'
    domainFilters: ['{{.metadata.annotations.external_dns_domain_filters}}']
    txtOwnerId: '{{.metadata.annotations.hub_cluster_name}}'
    policy: '{{ default "upsert-only" (index .metadata.annotations "external_dns_policy")}}'
