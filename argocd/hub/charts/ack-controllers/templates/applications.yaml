{{- $values := .Values -}}
# KRO Operator - using GitHub manifests instead of OCI
{{- if $values.enableKRO }}
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: kro
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "-3"
spec:
  project: default
  source:
    repoURL: https://github.com/awslabs/kro.git
    targetRevision: v0.4.1
    path: install/manifests
  destination:
    server: https://kubernetes.default.svc
    namespace: kro-system
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
      allowEmpty: true
    retry:
      limit: -1
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 10m
    syncOptions:
      - CreateNamespace=true
      - ServerSideApply=true
{{- end }}

# KRO Resource Graphs
{{- if $values.enableKROResourceGraphs }}
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: kro-resource-graphs
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "-2"
spec:
  project: default
  source:
    repoURL: https://github.com/indiana-university/gen3-kro.git
    targetRevision: staging
    path: argocd/hub/shared/kro-rgds/aws
  destination:
    server: https://kubernetes.default.svc
    namespace: kro-system
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
      allowEmpty: true
    retry:
      limit: -1
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 10m
    syncOptions:
      - CreateNamespace=true
      - ServerSideApply=true
{{- end }}

# ACK IAM Controller (Hub only) - using GitHub manifests
{{- if $values.enableACKIAM }}
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: ack-iam
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "1"
spec:
  project: default
  source:
    repoURL: https://github.com/aws-controllers-k8s/iam-controller.git
    targetRevision: v1.3.16
    path: config/crd
  destination:
    server: https://kubernetes.default.svc
    namespace: {{ $values.ackNamespace }}
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
      allowEmpty: true
    retry:
      limit: -1
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 10m
    syncOptions:
      - CreateNamespace=true
      - ServerSideApply=true
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: ack-iam-controller
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "2"
spec:
  project: default
  sources:
    - repoURL: https://github.com/aws-controllers-k8s/iam-controller.git
      targetRevision: v1.3.16
      path: config/rbac
    - repoURL: https://github.com/aws-controllers-k8s/iam-controller.git
      targetRevision: v1.3.16
      path: config/controller
  destination:
    server: https://kubernetes.default.svc
    namespace: {{ $values.ackNamespace }}
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
      allowEmpty: true
    retry:
      limit: -1
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 10m
    syncOptions:
      - CreateNamespace=true
      - ServerSideApply=true
{{- end }}

# ACK EKS Controller - using GitHub manifests
{{- if $values.enableACKEKS }}
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: ack-eks
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "1"
spec:
  project: default
  source:
    repoURL: https://github.com/aws-controllers-k8s/eks-controller.git
    targetRevision: v1.6.0
    path: config/crd
  destination:
    server: https://kubernetes.default.svc
    namespace: {{ $values.ackNamespace }}
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
      allowEmpty: true
    retry:
      limit: -1
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 10m
    syncOptions:
      - CreateNamespace=true
      - ServerSideApply=true
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: ack-eks-controller
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "2"
spec:
  project: default
  sources:
    - repoURL: https://github.com/aws-controllers-k8s/eks-controller.git
      targetRevision: v1.6.0
      path: config/rbac
    - repoURL: https://github.com/aws-controllers-k8s/eks-controller.git
      targetRevision: v1.6.0
      path: config/controller
  destination:
    server: https://kubernetes.default.svc
    namespace: {{ $values.ackNamespace }}
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
      allowEmpty: true
    retry:
      limit: -1
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 10m
    syncOptions:
      - CreateNamespace=true
      - ServerSideApply=true
{{- end }}

# ACK EC2 Controller - using GitHub manifests
{{- if $values.enableACKEC2 }}
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: ack-ec2
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "1"
spec:
  project: default
  source:
    repoURL: https://github.com/aws-controllers-k8s/ec2-controller.git
    targetRevision: v1.3.4
    path: config/crd
  destination:
    server: https://kubernetes.default.svc
    namespace: {{ $values.ackNamespace }}
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
      allowEmpty: true
    retry:
      limit: -1
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 10m
    syncOptions:
      - CreateNamespace=true
      - ServerSideApply=true
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: ack-ec2-controller
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "2"
spec:
  project: default
  sources:
    - repoURL: https://github.com/aws-controllers-k8s/ec2-controller.git
      targetRevision: v1.3.4
      path: config/rbac
    - repoURL: https://github.com/aws-controllers-k8s/ec2-controller.git
      targetRevision: v1.3.4
      path: config/controller
  destination:
    server: https://kubernetes.default.svc
    namespace: {{ $values.ackNamespace }}
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
      allowEmpty: true
    retry:
      limit: -1
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 10m
    syncOptions:
      - CreateNamespace=true
      - ServerSideApply=true
{{- end }}

# ACK EFS Controller - using GitHub manifests
{{- if $values.enableACKEFS }}
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: ack-efs
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "3"
spec:
  project: default
  source:
    repoURL: https://github.com/aws-controllers-k8s/efs-controller.git
    targetRevision: v1.0.6
    path: config/crd
  destination:
    server: https://kubernetes.default.svc
    namespace: {{ $values.ackNamespace }}
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
      allowEmpty: true
    retry:
      limit: -1
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 10m
    syncOptions:
      - CreateNamespace=true
      - ServerSideApply=true
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: ack-efs-controller
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "4"
spec:
  project: default
  sources:
    - repoURL: https://github.com/aws-controllers-k8s/efs-controller.git
      targetRevision: v1.0.6
      path: config/rbac
    - repoURL: https://github.com/aws-controllers-k8s/efs-controller.git
      targetRevision: v1.0.6
      path: config/controller
  destination:
    server: https://kubernetes.default.svc
    namespace: {{ $values.ackNamespace }}
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
      allowEmpty: true
    retry:
      limit: -1
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 10m
    syncOptions:
      - CreateNamespace=true
      - ServerSideApply=true
{{- end }}
