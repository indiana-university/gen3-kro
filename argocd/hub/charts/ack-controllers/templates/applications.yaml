{{- $values := .Values -}}
# KRO Operator
{{- if $values.enableKRO }}
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: kro
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "-3"
spec:
  project: default
  source:
    repoURL: oci://ghcr.io/kro-run/kro
    chart: kro
    targetRevision: "0.2.1"
  destination:
    server: https://kubernetes.default.svc
    namespace: kro-system
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
      allowEmpty: true
    retry:
      limit: -1
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 10m
    syncOptions:
      - CreateNamespace=true
      - ServerSideApply=true
{{- end }}

# KRO Resource Graphs
{{- if $values.enableKROResourceGraphs }}
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: kro-resource-graphs
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "-2"
spec:
  project: default
  source:
    repoURL: https://github.com/indiana-university/gen3-kro.git
    targetRevision: staging
    path: argocd/hub/shared/kro-rgds/aws
  destination:
    server: https://kubernetes.default.svc
    namespace: kro-system
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
      allowEmpty: true
    retry:
      limit: -1
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 10m
    syncOptions:
      - CreateNamespace=true
      - ServerSideApply=true
{{- end }}

# ACK IAM Controller (Hub only)
{{- if $values.enableACKIAM }}
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: ack-iam
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "1"
spec:
  project: default
  source:
    repoURL: oci://public.ecr.aws/aws-controllers-k8s
    chart: iam-chart
    targetRevision: "1.3.16"
    helm:
      values: |
        aws:
          region: {{ $values.awsRegion | default "us-east-1" }}
        serviceAccount:
          name: ack-iam-controller
  destination:
    server: https://kubernetes.default.svc
    namespace: {{ $values.ackNamespace }}
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
      allowEmpty: true
    retry:
      limit: -1
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 10m
    syncOptions:
      - CreateNamespace=true
      - ServerSideApply=true
{{- end }}

# ACK EKS Controller
{{- if $values.enableACKEKS }}
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: ack-eks
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "1"
spec:
  project: default
  source:
    repoURL: oci://public.ecr.aws/aws-controllers-k8s
    chart: eks-chart
    targetRevision: "1.6.0"
    helm:
      values: |
        aws:
          region: {{ $values.awsRegion | default "us-east-1" }}
        serviceAccount:
          name: ack-eks-controller
  destination:
    server: https://kubernetes.default.svc
    namespace: {{ $values.ackNamespace }}
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
      allowEmpty: true
    retry:
      limit: -1
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 10m
    syncOptions:
      - CreateNamespace=true
      - ServerSideApply=true
{{- end }}

# ACK EC2 Controller
{{- if $values.enableACKEC2 }}
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: ack-ec2
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "1"
spec:
  project: default
  source:
    repoURL: oci://public.ecr.aws/aws-controllers-k8s
    chart: ec2-chart
    targetRevision: "1.3.4"
    helm:
      values: |
        aws:
          region: {{ $values.awsRegion | default "us-east-1" }}
        serviceAccount:
          name: ack-ec2-controller
  destination:
    server: https://kubernetes.default.svc
    namespace: {{ $values.ackNamespace }}
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
      allowEmpty: true
    retry:
      limit: -1
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 10m
    syncOptions:
      - CreateNamespace=true
      - ServerSideApply=true
{{- end }}

# ACK EFS Controller
{{- if $values.enableACKEFS }}
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: ack-efs
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "3"
spec:
  project: default
  source:
    repoURL: oci://public.ecr.aws/aws-controllers-k8s
    chart: efs-chart
    targetRevision: "1.0.6"
    helm:
      values: |
        aws:
          region: {{ $values.awsRegion | default "us-east-1" }}
        serviceAccount:
          name: ack-efs-controller
  destination:
    server: https://kubernetes.default.svc
    namespace: {{ $values.ackNamespace }}
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
      allowEmpty: true
    retry:
      limit: -1
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 10m
    syncOptions:
      - CreateNamespace=true
      - ServerSideApply=true
{{- end }}

