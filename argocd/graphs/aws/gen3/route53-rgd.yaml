apiVersion: kro.run/v1alpha1
kind: ResourceGraphDefinition
metadata:
  name: gen3route53.kro.run
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
    argocd.argoproj.io/sync-wave: "0"
spec:
  schema:
    apiVersion: v1alpha1
    kind: Gen3Route53
    spec:
      name: string
      region: string
      zoneName: string
      privateZone: boolean | default=false
      vpcID: string | default=""
      vpcRegion: string | default=""
      comment: string | default="Gen3 hosted zone"
    status:
      hostedZoneID: ${hostedZone.status.hostedZoneID}
      hostedZoneARN: ${hostedZone.status.ackResourceMetadata.arn}
      nameServers: ${hostedZone.status.nameServers}

  resources:
  - id: hostedZone
    template:
      apiVersion: route53.services.k8s.aws/v1alpha1
      kind: HostedZone
      metadata:
        namespace: ${schema.spec.name}
        name: ${schema.spec.name}
        annotations:
          services.k8s.aws/region: ${schema.spec.region}
      spec:
        name: ${schema.spec.zoneName}
        hostedZoneConfig:
          comment: ${schema.spec.comment}
          privateZone: ${schema.spec.privateZone}
        vpc:
          vpcID: ${schema.spec.vpcID}
          vpcRegion: ${schema.spec.vpcRegion}
        tags:
          - key: "Name"
            value: ${schema.spec.name}
          - key: "Environment"
            value: "gen3"
