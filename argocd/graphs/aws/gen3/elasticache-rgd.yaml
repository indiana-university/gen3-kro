apiVersion: kro.run/v1alpha1
kind: ResourceGraphDefinition
metadata:
  name: gen3elasticache.kro.run
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
    argocd.argoproj.io/sync-wave: "1"
spec:
  schema:
    apiVersion: v1alpha1
    kind: Gen3ElastiCache
    spec:
      name: string
      region: string
      vpcID: string
      subnetIDs: string[]
      engine: string | default="redis"
      engineVersion: string | default="7.0"
      nodeType: string | default="cache.t3.micro"
      numCacheNodes: number | default=1
    status:
      cacheClusterARN: ${cacheCluster.status.ackResourceMetadata.arn}
      cacheClusterID: ${cacheCluster.status.cacheClusterID}
      subnetGroupName: ${cacheSubnetGroup.status.cacheSubnetGroupName}
      endpoint: ${cacheCluster.status.configurationEndpoint.address}
      port: ${cacheCluster.status.configurationEndpoint.port}

  resources:
  - id: cacheSubnetGroup
    template:
      apiVersion: elasticache.services.k8s.aws/v1alpha1
      kind: CacheSubnetGroup
      metadata:
        namespace: ${schema.spec.name}
        name: ${schema.spec.name}-cache-subnet-group
        annotations:
          services.k8s.aws/region: ${schema.spec.region}
      spec:
        cacheSubnetGroupName: ${schema.spec.name}-cache-subnet-group
        cacheSubnetGroupDescription: "Gen3 ElastiCache subnet group"
        subnetIDs: ${schema.spec.subnetIDs}
        tags:
          - key: "Name"
            value: ${schema.spec.name}-cache-subnet-group
          - key: "Environment"
            value: "gen3"
  - id: securityGroup
    template:
      apiVersion: ec2.services.k8s.aws/v1alpha1
      kind: SecurityGroup
      metadata:
        namespace: ${schema.spec.name}
        name: ${schema.spec.name}-cache-sg
        annotations:
          services.k8s.aws/region: ${schema.spec.region}
      spec:
        name: ${schema.spec.name}-cache-sg
        description: "Gen3 ElastiCache security group"
        vpcID: ${schema.spec.vpcID}
        ingressRules:
          - fromPort: 6379
            toPort: 6379
            ipProtocol: tcp
            ipRanges:
              - cidrIP: 10.0.0.0/8
        tags:
          - key: "Name"
            value: ${schema.spec.name}-cache-sg
  - id: cacheCluster
    template:
      apiVersion: elasticache.services.k8s.aws/v1alpha1
      kind: CacheCluster
      metadata:
        namespace: ${schema.spec.name}
        name: ${schema.spec.name}-cache
        annotations:
          services.k8s.aws/region: ${schema.spec.region}
      spec:
        cacheClusterID: ${schema.spec.name}-cache
        cacheNodeType: ${schema.spec.nodeType}
        engine: ${schema.spec.engine}
        engineVersion: ${schema.spec.engineVersion}
        numCacheNodes: ${schema.spec.numCacheNodes}
        cacheSubnetGroupName: ${cacheSubnetGroup.status.cacheSubnetGroupName}
        vpcSecurityGroupIDs:
          - ${securityGroup.status.id}
        tags:
          - key: "Name"
            value: ${schema.spec.name}-cache
          - key: "Environment"
            value: "gen3"
