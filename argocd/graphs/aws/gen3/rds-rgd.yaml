apiVersion: kro.run/v1alpha1
kind: ResourceGraphDefinition
metadata:
  name: gen3rds.kro.run
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
    argocd.argoproj.io/sync-wave: "1"
spec:
  schema:
    apiVersion: v1alpha1
    kind: Gen3RDS
    spec:
      name: string
      region: string
      vpcID: string
      subnetIDs: string[]
      engine: string | default="postgres"
      engineVersion: string | default="15.4"
      instanceClass: string | default="db.t3.micro"
      allocatedStorage: number | default=20
      databaseName: string
    status:
      dbInstanceARN: ${dbInstance.status.ackResourceMetadata.arn}
      dbInstanceID: ${dbInstance.status.dbInstanceIdentifier}
      endpoint: ${dbInstance.status.endpoint.address}
      port: ${dbInstance.status.endpoint.port}
      subnetGroupName: ${dbSubnetGroup.status.dbSubnetGroupName}

  resources:
  - id: dbSubnetGroup
    template:
      apiVersion: rds.services.k8s.aws/v1alpha1
      kind: DBSubnetGroup
      metadata:
        namespace: ${schema.spec.name}
        name: ${schema.spec.name}-db-subnet-group
        annotations:
          services.k8s.aws/region: ${schema.spec.region}
      spec:
        name: ${schema.spec.name}-db-subnet-group
        description: "Gen3 RDS subnet group"
        subnetIDs: ${schema.spec.subnetIDs}
        tags:
          - key: "Name"
            value: ${schema.spec.name}-db-subnet-group
          - key: "Environment"
            value: "gen3"
  - id: securityGroup
    template:
      apiVersion: ec2.services.k8s.aws/v1alpha1
      kind: SecurityGroup
      metadata:
        namespace: ${schema.spec.name}
        name: ${schema.spec.name}-db-sg
        annotations:
          services.k8s.aws/region: ${schema.spec.region}
      spec:
        name: ${schema.spec.name}-db-sg
        description: "Gen3 RDS security group"
        vpcID: ${schema.spec.vpcID}
        ingressRules:
          - fromPort: 5432
            toPort: 5432
            ipProtocol: tcp
            ipRanges:
              - cidrIP: 10.0.0.0/8
        tags:
          - key: "Name"
            value: ${schema.spec.name}-db-sg
  - id: dbInstance
    template:
      apiVersion: rds.services.k8s.aws/v1alpha1
      kind: DBInstance
      metadata:
        namespace: ${schema.spec.name}
        name: ${schema.spec.name}-db
        annotations:
          services.k8s.aws/region: ${schema.spec.region}
      spec:
        dbInstanceIdentifier: ${schema.spec.name}-db
        dbInstanceClass: ${schema.spec.instanceClass}
        engine: ${schema.spec.engine}
        engineVersion: ${schema.spec.engineVersion}
        allocatedStorage: ${schema.spec.allocatedStorage}
        dbName: ${schema.spec.databaseName}
        masterUsername: "gen3admin"
        dbSubnetGroupName: ${dbSubnetGroup.status.dbSubnetGroupName}
        vpcSecurityGroupIDs:
          - ${securityGroup.status.id}
        publiclyAccessible: false
        storageEncrypted: true
        tags:
          - key: "Name"
            value: ${schema.spec.name}-db
          - key: "Environment"
            value: "gen3"
