apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: graph-instances
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "2"
spec:
  goTemplate: true
  goTemplateOptions: ["missingkey=error"]
  generators:
  - matrix:
      generators:
        - git:
            repoURL: '{{.metadata.annotations.rgds_repo_url}}'
            revision: '{{.metadata.annotations.branch}}'
            directories:
              - path: '{{.metadata.annotations.hub_repo_basepath}}/graphs/instances/*'
        - clusters:
            selector:
              matchLabels:
                fleet_member: control-plane
  template:
    metadata:
      name: '{{- if .path }}{{ .path.basename }}-graph-instances{{- else }}{{ .name }}-graph-instances{{- end }}'
      labels:
        app: graph-instances
        cluster: '{{- if .path }}{{ .path.basename }}{{- else }}{{ .name }}{{- end }}'
      annotations:
        argocd.argoproj.io/sync-wave: "2"
    spec:
      project: default
      source:
        repoURL: '{{.metadata.annotations.hub_repo_url}}'
        targetRevision: '{{.metadata.annotations.branch}}'
        path: '{{- if .path }}{{ .path.path }}/infrastructure{{- else }}{{ .metadata.annotations.hub_repo_basepath }}/graphs/instances/{{ .name }}/infrastructure{{- end }}'
        kustomize:
          commonLabels:
            cluster: '{{- if .path }}{{ .path.basename }}{{- else }}{{ .name }}{{- end }}'
      destination:
        server: '{{ .server }}'
        namespace: default
      syncPolicy:
        automated:
          prune: true
          selfHeal: true
        syncOptions:
          - CreateNamespace=true
          - ServerSideApply=true
          - SkipDryRunOnMissingResource=true
          - RespectIgnoreDifferences=true
        retry:
          limit: 5
          backoff:
            duration: 10s
            factor: 2
            maxDuration: 5m
