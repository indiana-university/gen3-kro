hub:
  alias: "gen3-csoc"
  aws_profile: "boadeyem_tf"
  aws_region: "us-east-1"
  vpc:
    enable_vpc: true
    vpc_name: "gen3-kro-vpc"
    vpc_cidr: "10.0.0.0/16"
    cluster_name: "gen3-kro-csoc"
    enable_nat_gateway: true
    single_nat_gateway: true
    # Explicit subnet configuration (5 AZs in us-east-1)
    availability_zones:
      - "us-east-1a"
      - "us-east-1b"
      - "us-east-1c"
      - "us-east-1d"
      - "us-east-1f"
    # Private subnets: /20 blocks (4096 IPs each) for EKS nodes
    private_subnet_cidrs:
      - "10.0.0.0/20" # us-east-1a: 10.0.0.0 - 10.0.15.255
      - "10.0.16.0/20" # us-east-1b: 10.0.16.0 - 10.0.31.255
      - "10.0.32.0/20" # us-east-1c: 10.0.32.0 - 10.0.47.255
      - "10.0.48.0/20" # us-east-1d: 10.0.48.0 - 10.0.63.255
      - "10.0.64.0/20" # us-east-1f: 10.0.64.0 - 10.0.79.255
    # Public subnets: /24 blocks (256 IPs each) for load balancers
    public_subnet_cidrs:
      - "10.0.240.0/24" # us-east-1a: 10.0.240.0 - 10.0.240.255
      - "10.0.241.0/24" # us-east-1b: 10.0.241.0 - 10.0.241.255
      - "10.0.242.0/24" # us-east-1c: 10.0.242.0 - 10.0.242.255
      - "10.0.243.0/24" # us-east-1d: 10.0.243.0 - 10.0.243.255
      - "10.0.244.0/24" # us-east-1f: 10.0.244.0 - 10.0.244.255
  eks:
    enable_eks_cluster: true
    # Existing VPC configuration (set enable_vpc to attach to existing VPC)
    existing_vpc_id: ""
    existing_subnet_ids: []
    kubernetes_version: "1.33"
    cluster_endpoint_public_access: true
    enable_cluster_creator_admin_permissions: true
    cluster_compute_config:
      enabled: true
      node_pools: ["general-purpose"]
  gitops:
    org_name: "indiana-university"
    repo_name: "gen3-kro"
    github_url: "github.com"
    branch: "jimi-container-terragrunt-remodel"
    bootstrap_path: "argocd/bootstrap"
  iam_gitops:
    org_name: "indiana-university"
    repo_name: "gen3-kro"
    github_url: "github.com"
    branch: "jimi-container-terragrunt-remodel"
    policy_base_path: "iam"
  # Addon configuration (enabled addons)
  addon_configs:
    # Secrets Management
    external_secrets:
      enable_pod_identity: true
      kms_key_arns: ["arn:aws:kms:us-east-1:*:key/*"]
      secrets_manager_arns: ["arn:aws:secretsmanager:us-east-1:*:secret:*"]
      ssm_parameter_arns: ["arn:aws:ssm:us-east-1:*:parameter/*"]
      create_permission: true
      attach_custom_policy: false
      namespace: "external-secrets"
      service_account: "external-secrets"
    # GitOps & Application Management
    argocd:
      enable_pod_identity: true
      enable_argocd: true
      namespace: "argocd"
      service_account: "argocd-server-sa"
      argocd_chart_version: "8.6.0"
  ack_configs:
    cloudtrail:
      enable_pod_identity: true
      namespace: "ack-system"
      service_account: "ack-cloudtrail-sa"
    cloudwatchlogs:
      enable_pod_identity: true
      namespace: "ack-system"
      service_account: "ack-cloudwatchlogs-sa"
    ec2:
      enable_pod_identity: true
      namespace: "ack-system"
      service_account: "ack-ec2-sa"
    efs:
      enable_pod_identity: true
      namespace: "ack-system"
      service_account: "ack-efs-sa"
    eks:
      enable_pod_identity: true
      namespace: "ack-system"
      service_account: "ack-eks-sa"
    iam:
      enable_pod_identity: true
      namespace: "ack-system"
      service_account: "ack-iam-sa"
    kms:
      enable_pod_identity: true
      namespace: "ack-system"
      service_account: "ack-kms-sa"
    opensearchservice:
      enable_pod_identity: true
      namespace: "ack-system"
      service_account: "ack-opensearchservice-sa"
    rds:
      enable_pod_identity: true
      namespace: "ack-system"
      service_account: "ack-rds-sa"
    route53:
      enable_pod_identity: true
      namespace: "ack-system"
      service_account: "ack-route53-sa"
    s3:
      enable_pod_identity: true
      namespace: "ack-system"
      service_account: "ack-s3-sa"
    secretsmanager:
      enable_pod_identity: true
      namespace: "ack-system"
      service_account: "ack-secretsmanager-sa"
    sns:
      enable_pod_identity: true
      namespace: "ack-system"
      service_account: "ack-sns-sa"
    sqs:
      enable_pod_identity: true
      namespace: "ack-system"
      service_account: "ack-sqs-sa"
    wafv2:
      enable_pod_identity: true
      namespace: "ack-system"
      service_account: "ack-wafv2-sa"
# GitOps configuration for rgds to be passed to argocd for deployment
rgds:
  gitops:
    org_name: "indiana-university"
    repo_name: "gen3-kro"
    github_url: "github.com"
    branch: "jimi-container-terragrunt-remodel"
    argocd_path: "argocd/shared"
# Base tags applied to all resources
tags:
  Project: "gen3-kro"
  Environment: "hub"
  ManagedBy: "terragrunt"
  Owner: "platform-team"
paths:
  outputs_dir: "outputs/terraform"
  terraform_state_bucket: "gen3-kro-envs-4852"
spokes:
  - alias: "spoke1"
    enabled: true # Re-enabled for deployment due to iam-policy module "known only after apply" issues
    region: "us-east-1"
    profile: "boadeyem_tf"
    gitops:
      org_name: "indiana-university"
      repo_name: "gen3-kro"
      github_url: "github.com"
      branch: "jimi-container-terragrunt-remodel"
      repo_url: "https://github.com/indiana-university/gen3-kro.git"
      argo_path: "argocd/spokes"
    ack_configs:
      cloudtrail:
        enable_pod_identity: true
        # override_arn: "arn:aws:iam::123456789012:role/gen3-kro-hub-ack-cloudtrail"  # Optional: Use hub role instead of creating spoke role
      cloudwatchlogs:
        enable_pod_identity: true
        # override_arn: "arn:aws:iam::123456789012:role/gen3-kro-hub-ack-cloudwatchlogs"
      ec2:
        enable_pod_identity: true
        # override_arn: "arn:aws:iam::123456789012:role/gen3-kro-hub-ack-ec2"
      efs:
        enable_pod_identity: true
        # override_arn: "arn:aws:iam::123456789012:role/gen3-kro-hub-ack-efs"
      eks:
        enable_pod_identity: true
        # override_arn: "arn:aws:iam::123456789012:role/gen3-kro-hub-ack-eks"
      iam:
        enable_pod_identity: true
        # override_arn: "arn:aws:iam::123456789012:role/gen3-kro-hub-ack-iam"
      kms:
        enable_pod_identity: true
        # override_arn: "arn:aws:iam::123456789012:role/gen3-kro-hub-ack-kms"
      opensearchservice:
        enable_pod_identity: true
        # override_arn: "arn:aws:iam::123456789012:role/gen3-kro-hub-ack-opensearchservice"
      rds:
        enable_pod_identity: true
        # override_arn: "arn:aws:iam::123456789012:role/gen3-kro-hub-ack-rds"
      route53:
        enable_pod_identity: true
        # override_arn: "arn:aws:iam::123456789012:role/gen3-kro-hub-ack-route53"
      s3:
        enable_pod_identity: true
        # override_arn: "arn:aws:iam::123456789012:role/gen3-kro-hub-ack-s3"
      secretsmanager:
        enable_pod_identity: true
        # override_arn: "arn:aws:iam::123456789012:role/gen3-kro-hub-ack-secretsmanager"
      sns:
        enable_pod_identity: true
        # override_arn: "arn:aws:iam::123456789012:role/gen3-kro-hub-ack-sns"
      sqs:
        enable_pod_identity: true
        # override_arn: "arn:aws:iam::123456789012:role/gen3-kro-hub-ack-sqs"
      wafv2:
        enable_pod_identity: true
        # override_arn: "arn:aws:iam::123456789012:role/gen3-kro-hub-ack-wafv2"
    tags:
      Team: "platform"
      Purpose: "multi-account-demo"
    addon_configs:
      argocd:
        enable_pod_identity: true
      external_secrets:
        enable_pod_identity: true
